#!/usr/bin/env php
<?php

/**
 * Parse a JSON file and return the content as an array.
 */
function parseJson(string $jsonFilePath): array
{
    $jsonContent = trim(file_get_contents($jsonFilePath));
    $jsonContent = (array) json_decode($jsonContent);

    return $jsonContent;
}

/**
 * Return a property from an array.
 */
function getProperty(array $data, string $property): string
{
    $propertyList = explode('.', $property);
    $property = array_shift($propertyList);
    $nextProperties = implode('.', $propertyList);
    $value = 'null';

    if (isset($data[$property])) {
        $value = $data[$property];

        if (is_object($value)) {
            $value = (array) $value;
        }

        if (is_array($value)) {
            if (!empty($nextProperties)) {
                $value = getProperty($value, $nextProperties);
            } else {
                $value = implode(', ', $value);
            }
        }

        $value = (string) $value;
    }

    return $value;
}

// Check if required arguments are provided
if ($argc !== 3) {
    echo "Usage: parsejson <json_file_path> <property_path>\n";
    exit(1);
}

// Get JSON file path and property path from command-line arguments
$jsonFile = $argv[1];
$property = $argv[2];

// Check if the JSON file exists
if (!file_exists($jsonFile)) {
    echo "Error: JSON file not found: $jsonFile\n";
    exit(1);
}

// Load the JSON content and extract the property value
$jsonContent = parseJson($jsonFile);
$propertyValue = getProperty($jsonContent, $property);

// Display the property value or an error message if not found
if ($propertyValue !== 'null') {
    echo "$propertyValue";
} else {
    echo "Error: Property '$property' not found in the JSON file.\n";
}
